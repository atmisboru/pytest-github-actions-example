name: Run Unit Test via Pytest

on:
  push:
  workflow_dispatch:
    inputs:
      sleep_seconds:
        description: "Seconds to sleep per tick (for testing progress)"
        required: false
        default: "3"
      loop_count:
        description: "How many ticks to loop (for testing progress)"
        required: false
        default: "10"

# 给 push 事件也能用到上面的 inputs（push 时 inputs 为空，会走默认）
env:
  SLEEP_SECONDS: ${{ inputs.sleep_seconds || '3' }}
  LOOP_COUNT: ${{ inputs.loop_count || '10' }}

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]  # 多版本并行，便于看到多个 job
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install deps (pip & ruff & coverage)
        run: |
          python -m pip install --upgrade pip
          pip install -U ruff coverage
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint with Ruff (non-blocking)
        run: |
          ruff --format=github --target-version=py310 .
        continue-on-error: true

      - name: Simulate long step (pre-test ticking)
        run: |
          echo "Pre-test ticking: ${LOOP_COUNT} x ${SLEEP_SECONDS}s"
          for i in $(seq 1 ${LOOP_COUNT}); do
            echo "Tick $i / ${LOOP_COUNT} (build:${{ matrix.python-version }})"
            sleep ${SLEEP_SECONDS}
          done

      - name: Test with pytest + coverage
        run: |
          coverage run -m pytest -v -s

      - name: Generate Coverage Report
        run: |
          coverage report -m

      - name: Simulate post-test ticking
        run: |
          echo "Post-test ticking: ${LOOP_COUNT} x ${SLEEP_SECONDS}s"
          for i in $(seq 1 ${LOOP_COUNT}); do
            echo "Post tick $i / ${LOOP_COUNT} (build:${{ matrix.python-version }})"
            sleep ${SLEEP_SECONDS}
          done

  dummy:
    runs-on: ubuntu-latest
    steps:
      - name: Dummy ticking
        run: |
          echo "Dummy job ticking: ${LOOP_COUNT} x ${SLEEP_SECONDS}s"
          for i in $(seq 1 ${LOOP_COUNT}); do
            echo "Dummy tick $i / ${LOOP_COUNT}"
            sleep ${SLEEP_SECONDS}
          done

  integration:
    runs-on: ubuntu-latest
    needs: [build, dummy]  # 依赖前两个 job，便于看到排队/串行的感觉
    steps:
      - name: Aggregate stage (final ticking)
        run: |
          echo "Integration ticking: ${LOOP_COUNT} x ${SLEEP_SECONDS}s"
          for i in $(seq 1 ${LOOP_COUNT}); do
            echo "Integration tick $i / ${LOOP_COUNT}"
            sleep ${SLEEP_SECONDS}
          done

  summary:
    runs-on: ubuntu-latest
    needs: [integration]
    if: always()
    steps:
      - name: Run summary
        run: |
          echo "All done. Build matrix + dummy + integration finished."
